# -*- coding: utf-8 -*-
"""adjacency_matrix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dUuCb89foMPvVcCs98FFIrCC5ISOSKwr
"""

import pandas as pd
import numpy as np
import json

data = pd.read_csv('/content/Adjacency.csv',header=None)

confi=[]
for i in range(len(data)):
  config1=data.iloc[i]
  config=config1.to_numpy()
  confi.append(config)

confi[0]

call_count=0
for i in range(len(confi)):
  name_file= adjacency_mat(confi[i])

def adjacency_mat(configuration):
  global call_count
  call_count += 1
#5x6 grid with elemenets in row 3 - column 3 and column 4 are neglected
  adjacency_matrix=np.zeros((18,18))
  #positions = []
  index = 0
  #for row in range(5):
      #for col in range(6):
          #if row == 2 and (col == 2 or col == 3):
              #continue
          #positions.append((row, col))

#adjacency matrix values
  for i in range(18):
      for j in range(i+1, 18):
          if configuration[i] == 1 and configuration[j] == 1:
              #x1, y1 = positions[i]
              #x2, y2 = positions[j]
              #distance = np.sqrt((x2 - x1)**2 + (y2 - y1)**2)
              adjacency_matrix[i, j] =1
              adjacency_matrix[j, i] =1
  np.fill_diagonal(adjacency_matrix,1)


  #converting the file to a csv
  adjacency_df = pd.DataFrame(adjacency_matrix)
  file_name = f'matrix-{call_count}.csv'

  with open(file_name, 'w') as f:
    adjacency_df.to_csv(f, index=True)

    #print(f"Adjacency Matrix saved to '{file_name}'")
    return file_name

data1=json